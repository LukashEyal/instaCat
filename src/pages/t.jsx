messages.jsx import { useEffect } from 'react' import { useDispatch, useSelector } from 'react-redux' import { loadMsgs, sendMsg, getActionSentMsg } from '../store/msg.acitons' import { loadUser } from '../store/user.actions' import { socketService, SOCKET_EVENT_ADD_MSG, SOCKET_EMIT_SEND_MSG, } from '../services/socket.service' export function Messages() { const loggedInUser = useSelector(storeState => storeState.userModule.user) const msgs = useSelector(storeState => storeState.msgModule.msgs) const dispatch = useDispatch() useEffect(() => { loadMsgs(loggedInUser._id) loadUser() socketService.on(SOCKET_EVENT_ADD_MSG, msg => { console.log('GOT from socket', msg) dispatch(getActionSentMsg(msg)) }) return () => { socketService.off(SOCKET_EVENT_ADD_MSG) } }, []) return ( <section className="messages"> <h2>Messages</h2> {!msgs.length ? ( <p style={{ opacity: 0.7 }}>No messages to show.</p> ) : ( <ul className="msg-list"> {msgs.map(msg => ( <li key={msg._id || msg.id}> <strong>{msg.from?.username || msg.from || msg.fromUserId}:</strong> {msg.txt} </li> ))} </ul> )} </section> ) }